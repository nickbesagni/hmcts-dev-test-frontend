{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}

{% extends "template.njk" %}

{% block content %}
{{ govukBackLink({
    text: "Back",
    href: "/"
    }) }}

  {% call govukFieldset({
  legend: {
    text: "Add a new task",
    classes: "govuk-fieldset__legend--l",
    isPageHeading: true
  }
}) %}

  {% if error %}
    <p class="govuk-error-message">{{ error }}</p>
  {% endif %}

  <form method="post" action="/task/new">
    {{ govukInput({
      label: {
        text: "Title"
      },
      id: "title",
      name: "title",
      value: formData and formData.title,
      errorMessage: { 
        text: getFieldErrorMessage(errors, "title") 
        } if errors|length and getFieldErrorMessage(errors, "title") else null
    }) }}

    {{ govukTextarea({
      label: {
        text: "Description"
      },
      id: "description",
      name: "description",
      value: formData and formData.description
    }) }}

    {{ govukSelect({
      label: {
        text: "Status"
      },
      id: "status",
      name: "status",
      items: [
        {
          value: "Not done",
          text: "Not done",
          selected: formData and formData.status == 'Not done'
        },
        {
          value: "Complete",
          text: "Complete",
          selected: formData and formData.status == 'Complete'
        }
      ]
    }) }}

    {{ govukDateInput({
      fieldset: {
        legend: {
          text: "Due date",
          classes: "govuk-label--error" if errors|length and getFieldErrorMessage(errors, "dueDateTime") else ""
        }
      },
      id: "dueDateTime",
      namePrefix: "dueDateTime",
      value: formData and formData.dueDateTime,
      errorMessage: { 
        text: getFieldErrorMessage(errors, "dueDateTime") 
        } if errors|length and getFieldErrorMessage(errors, "dueDateTime") else null
    }) }}

    <div class="govuk-button-group">
      {{ govukButton({
        text: "Save task",
        classes: "govuk-button--primary",
        attributes: {
          type: "submit"
        }
      }) }}
      {{ govukButton({
        text: "Cancel",
        href: "/",
        classes: "govuk-button--secondary"
      }) }}
    </div>
  </form>
{% endcall %}
{% endblock %}
